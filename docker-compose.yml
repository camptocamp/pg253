---
version: '3'
services:
  postgres-to-s3:
    image: registry.gitlab.com/camptocamp/is/tools/docker-postgres-backup-to-s3:latest
    build: ./
    tty: true
    restart: on-failure
    environment:
      SCHEDULE: '* * * * *'
      AWS_ENDPOINT: http://minio:9000
      AWS_ACCESS_KEY_ID: AKIAACCESSKEY
      AWS_SECRET_ACCESS_KEY: SECRETSECRET
      AWS_S3_REGION_NAME: local
      #AWS_DEFAULT_REGION: eu-west-1
      AWS_S3_BUCKET: postgres-to-s3
      BLACKLISTED_DATABASES: .*backup.*|postgres|rdsadmin
      PGHOST: postgres
      PGPASSWORD: pgpass
      PGUSER: postgres

  postgres:
    image: camptocamp/postgres:12
    # synchronous_commit = off, fsync = off
    command: -c 'synchronous_commit=off' -c 'fsync=off'
    environment:
      POSTGRES_PASSWORD: pgpass
      POSTGRES_USER: postgres
    ports:
      - "5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
      - ./docker-entrypoint-initdb.d:/docker-entrypoint-initdb.d

  minio:
    # Limit bandwidth with: tc qdisc add dev br-577ead7e585d root tbf rate 1000kbps latency 50ms burst 2500
    image: minio/minio
    #entrypoint: ""
    #command: sh
    #tty: true
    #stdin_open: true
    command: server /data
    volumes:
      - minio:/data
    ports:
      - "9000:9000"
    environment:
      MINIO_ACCESS_KEY: AKIAACCESSKEY
      MINIO_SECRET_KEY: SECRETSECRET

  create-bucket:
    image: amazon/aws-cli
    entrypoint: /create-bucket-entrypoint.sh
    stop_signal: SIGKILL
    volumes:
      - ./create-bucket-entrypoint.sh:/create-bucket-entrypoint.sh
    environment:
      MINIO_URL: http://minio:9000
      BUCKET: postgres-to-s3
      AWS_ACCESS_KEY_ID: AKIAACCESSKEY
      AWS_SECRET_ACCESS_KEY: SECRETSECRET

  # Observability
  prometheus:
    image: prom/prometheus
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - prometheus:/prometheus
    ports:
      - "9090:9090"
  grafana:
    image: grafana/grafana:6.7.3
    volumes:
      - ./grafana-data/:/var/lib/grafana
    ports:
      - "3000:3000"

volumes:
    pgdata:
    minio:
    prometheus:
